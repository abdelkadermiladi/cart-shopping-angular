{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CartComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"h2\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function CartComponent_div_2_Template_form_ngSubmit_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit());\n    });\n    i0.ɵɵelementStart(10, \"div\")(11, \"label\", 3);\n    i0.ɵɵtext(12, \" Name \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\")(15, \"label\", 5);\n    i0.ɵɵtext(16, \" Address \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 7);\n    i0.ɵɵtext(19, \"Purchase\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, item_r1.price));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Total to pay : \", i0.ɵɵpipeBind1(8, 6, ctx_r0.totalAmount()), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.checkoutForm);\n  }\n}\nexport class CartComponent {\n  constructor(cartService, formBuilder) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.items = this.cartService.getItems();\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n    this.total = 0;\n  }\n  onSubmit() {\n    // Process checkout data here\n    if (this.cartService.getItemCount() > 0) {\n      window.alert('Your order has been submitted successfully');\n    } else {\n      window.alert('You should add at least one product to the cart to submit your order');\n    }\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n  totalAmount() {\n    for (let item of this.items) {\n      this.total += item.price;\n    }\n    return this.total;\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"cart-item\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CartComponent_div_2_Template, 20, 8, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAEAA,8BAAkD;IAC1CA,YAAgB;IAAAA,iBAAO;IAC7BA,4BAAM;IAAAA,YAA2B;;IAAAA,iBAAO;IAExCA,0BAAI;IAAAA,YAA6C;;IAAAA,iBAAK;IAGxDA,+BAAyD;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IAEtDA,4BAAK;IAEDA,uBACF;IAAAA,iBAAQ;IACRA,4BAAoD;IACtDA,iBAAM;IAENA,4BAAK;IAEDA,0BACF;IAAAA,iBAAQ;IACRA,4BAA0D;IAC5DA,iBAAM;IAENA,kCAAqC;IAAAA,yBAAQ;IAAAA,iBAAS;;;;;IAtBhDA,eAAgB;IAAhBA,4CAAgB;IAChBA,eAA2B;IAA3BA,yDAA2B;IAE7BA,eAA6C;IAA7CA,wFAA6C;IAG7CA,eAA0B;IAA1BA,+CAA0B;;;ACChC,OAAM,MAAOC,aAAa;EASxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,gBAAW,GAAXD,WAAW;IACX,gBAAW,GAAXC,WAAW;IATrB,UAAK,GAAG,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE;IAEnC,iBAAY,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV,CAAC;IAuBF,UAAK,GAAG,CAAC;EAlBL;EAEJC,QAAQ;IACN;IAEA,IAAI,IAAI,CAACN,WAAW,CAACO,YAAY,EAAE,GAAG,CAAC,EACrC;MACAC,MAAM,CAACC,KAAK,CAAC,4CAA4C,CAAC;KACzD,MAED;MACED,MAAM,CAACC,KAAK,CAAC,sEAAsE,CAAC;;IAGxF,IAAI,CAACC,KAAK,GAAG,IAAI,CAACV,WAAW,CAACW,SAAS,EAAE;IACzCC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;IACtE,IAAI,CAACD,YAAY,CAACE,KAAK,EAAE;EAC3B;EAEAC,WAAW;IAET,KAAK,IAAIC,IAAI,IAAI,IAAI,CAACR,KAAK,EAAE;MAC3B,IAAI,CAACS,KAAK,IAAID,IAAI,CAACE,KAAK;;IAE1B,OAAO,IAAI,CAACD,KAAK;EACnB;;AArCWrB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1B5B,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MAEbA,+DAAkD;;;MAAVA,eAAQ;MAARA,mCAAQ","names":["i0","CartComponent","constructor","cartService","formBuilder","getItems","group","name","address","onSubmit","getItemCount","window","alert","items","clearCart","console","warn","checkoutForm","value","reset","totalAmount","item","total","price","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\Nouveau dossier\\angular-beginner\\src\\app\\cart\\cart.component.html","C:\\Users\\LENOVO\\Desktop\\Nouveau dossier\\angular-beginner\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["<h3>Cart</h3>\r\n\r\n<div class=\"cart-item\" *ngFor=\"let item of items\">\r\n  <span>{{ item.name }} </span>\r\n  <span>{{ item.price | currency }}</span>\r\n\r\n  <h2>Total to pay : {{ totalAmount() | currency }}</h2>\r\n\r\n\r\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n  <div>\r\n    <label for=\"name\">\r\n      Name\r\n    </label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"address\">\r\n      Address\r\n    </label>\r\n    <input id=\"address\" type=\"text\" formControlName=\"address\">\r\n  </div>\r\n\r\n  <button class=\"button\" type=\"submit\">Purchase</button>\r\n\r\n</form>","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport { CartService } from '../cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent {\r\n\r\n  items = this.cartService.getItems();\r\n\r\n  checkoutForm = this.formBuilder.group({\r\n    name: '',\r\n    address: ''\r\n  });\r\n  \r\n  constructor(\r\n    private cartService: CartService,\r\n    private formBuilder: FormBuilder,\r\n  ) { }\r\n\r\n  onSubmit(): void {\r\n    // Process checkout data here\r\n\r\n    if (this.cartService.getItemCount() > 0) \r\n      {\r\n      window.alert('Your order has been submitted successfully');\r\n      }\r\n    else\r\n      {\r\n        window.alert('You should add at least one product to the cart to submit your order')\r\n      }\r\n\r\n    this.items = this.cartService.clearCart();\r\n    console.warn('Your order has been submitted', this.checkoutForm.value);\r\n    this.checkoutForm.reset();\r\n  }\r\n  total = 0;\r\n  totalAmount() {\r\n    \r\n    for (let item of this.items) {\r\n      this.total += item.price;\r\n    }\r\n    return this.total;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}