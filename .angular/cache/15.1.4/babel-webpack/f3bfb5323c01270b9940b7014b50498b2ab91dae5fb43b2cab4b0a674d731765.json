{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CartComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\");\n    i0.ɵɵtext(8, \"Delete from cart\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, item_r1.price));\n  }\n}\nexport class CartComponent {\n  constructor(cartService, formBuilder) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.items = this.cartService.getItems();\n    this.totalAmount = 0;\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n    this.calculateTotalAmount();\n  }\n  calculateTotalAmount() {\n    this.totalAmount = this.items.reduce((acc, item) => acc + item.price, 0);\n  }\n  onSubmit() {\n    // Process checkout data here\n    if (this.cartService.getItemCount() > 0) {\n      window.alert('Your order has been submitted successfully');\n    } else {\n      window.alert('You should add at least one product to the cart to submit your order');\n    }\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 24,\n  vars: 5,\n  consts: [[\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"cart-item\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 2, \"width\", \"250px\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\", 2, \"width\", \"250px\"], [\"type\", \"submit\", 1, \"button\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, CartComponent_div_2_Template, 9, 4, \"div\", 0);\n      i0.ɵɵelement(3, \"br\");\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"span\")(6, \"b\");\n      i0.ɵɵtext(7, \"Total to pay\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"span\")(9, \"b\");\n      i0.ɵɵtext(10);\n      i0.ɵɵpipe(11, \"currency\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CartComponent_Template_form_ngSubmit_13_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 3);\n      i0.ɵɵtext(16, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"label\", 5);\n      i0.ɵɵtext(20, \" Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 7);\n      i0.ɵɵtext(23, \"Purchase\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 3, ctx.totalAmount));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAEAA,8BAAkD;IAC1CA,YAAgB;IAAAA,iBAAO;IAC7BA,4BAAM;IAAAA,YAA2B;;IAAAA,iBAAO;IACxCA,2BAAK;IAAQA,gCAAgB;IAAAA,iBAAS;;;;IAFhCA,eAAgB;IAAhBA,4CAAgB;IAChBA,eAA2B;IAA3BA,yDAA2B;;;ACMnC,OAAM,MAAOC,aAAa;EAWxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,gBAAW,GAAXD,WAAW;IACX,gBAAW,GAAXC,WAAW;IAXrB,UAAK,GAAG,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE;IACnC,gBAAW,GAAG,CAAC;IAGf,iBAAY,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACpCC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV,CAAC;IAMA,IAAI,CAACC,oBAAoB,EAAE;EAC5B;EACAA,oBAAoB;IACnB,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;EAC1E;EACAC,QAAQ;IACN;IAEA,IAAI,IAAI,CAACb,WAAW,CAACc,YAAY,EAAE,GAAG,CAAC,EACrC;MACAC,MAAM,CAACC,KAAK,CAAC,4CAA4C,CAAC;KACzD,MAED;MACED,MAAM,CAACC,KAAK,CAAC,sEAAsE,CAAC;;IAGxF,IAAI,CAACR,KAAK,GAAG,IAAI,CAACR,WAAW,CAACiB,SAAS,EAAE;IACzCC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;IACtE,IAAI,CAACD,YAAY,CAACE,KAAK,EAAE;EAC3B;;AAnCWxB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1B9B,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MAEbA,8DAIM;MAGNA,qBAAI;MACJA,8BAAuB;MAEVA,4BAAY;MAAAA,iBAAI;MACzBA,4BAAM;MAAGA,aAA4B;;MAAAA,iBAAI;MAI7CA,sBAAI;MAEJA,gCAAyD;MAAxBA;QAAA,OAAY+B,cAAU;MAAA,EAAC;MAEtD/B,4BAAK;MAEDA,uBACF;MAAAA,iBAAQ;MACRA,4BAA0E;MAC5EA,iBAAM;MAENA,4BAAK;MAEDA,0BACF;MAAAA,iBAAQ;MACRA,4BAAgF;MAClFA,iBAAM;MAENA,kCAAqC;MAAAA,yBAAQ;MAAAA,iBAAS;;;MAjChBA,eAAQ;MAARA,mCAAQ;MAWnCA,eAA4B;MAA5BA,4DAA4B;MAMnCA,eAA0B;MAA1BA,4CAA0B","names":["i0","CartComponent","constructor","cartService","formBuilder","getItems","group","name","address","calculateTotalAmount","totalAmount","items","reduce","acc","item","price","onSubmit","getItemCount","window","alert","clearCart","console","warn","checkoutForm","value","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\LENOVO\\Desktop\\cart-shopping\\cart-shopping-angular\\src\\app\\cart\\cart.component.html","C:\\Users\\LENOVO\\Desktop\\cart-shopping\\cart-shopping-angular\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["<h3>Cart</h3>\r\n\r\n<div class=\"cart-item\" *ngFor=\"let item of items\">\r\n  <span>{{ item.name }} </span>\r\n  <span>{{ item.price | currency }}</span>\r\n  <div><button>Delete from cart</button></div>\r\n</div>\r\n\r\n\r\n<br>\r\n<div class=\"cart-item\">\r\n\r\n    <span><b>Total to pay</b></span>\r\n    <span><b>{{ totalAmount | currency }}</b></span>\r\n    \r\n\r\n</div>\r\n<br>\r\n\r\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n  <div>\r\n    <label for=\"name\">\r\n      Name\r\n    </label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\" style=\"width: 250px;\">\r\n  </div>\r\n\r\n  <div>\r\n    <label for=\"address\">\r\n      Address\r\n    </label>\r\n    <input id=\"address\" type=\"text\" formControlName=\"address\" style=\"width: 250px;\">\r\n  </div>\r\n\r\n  <button class=\"button\" type=\"submit\">Purchase</button>\r\n\r\n</form>","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport { CartService } from '../cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent {\r\n\r\n  items = this.cartService.getItems();\r\n  totalAmount = 0;\r\n\r\n\r\n  checkoutForm = this.formBuilder.group({\r\n    name: '',\r\n    address: ''\r\n  });\r\n  \r\n  constructor(\r\n    private cartService: CartService,\r\n    private formBuilder: FormBuilder,\r\n  ) {\r\n    this.calculateTotalAmount();\r\n   }\r\n   calculateTotalAmount() {\r\n    this.totalAmount = this.items.reduce((acc, item) => acc + item.price, 0);\r\n  }\r\n  onSubmit(): void {\r\n    // Process checkout data here\r\n\r\n    if (this.cartService.getItemCount() > 0) \r\n      {\r\n      window.alert('Your order has been submitted successfully');\r\n      }\r\n    else\r\n      {\r\n        window.alert('You should add at least one product to the cart to submit your order')\r\n      }\r\n\r\n    this.items = this.cartService.clearCart();\r\n    console.warn('Your order has been submitted', this.checkoutForm.value);\r\n    this.checkoutForm.reset();\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}